{"ast":null,"code":"var _jsxFileName = \"/home/even/Documents/my_scripts/salt/misc_tutorials/personal_shopping_list/src/Context/ListContextProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListContext = /*#__PURE__*/React.createContext();\nconst initialValue = {\n  lists: [],\n  loading: true,\n  error: ''\n};\n\nconst reducer = (value, action) => {\n  console.log(value);\n\n  switch (action.type) {\n    case 'GET_LISTS_SUCCESS':\n      return { ...value,\n        lists: action.payload,\n        loading: false\n      };\n\n    case 'GET_LISTS_ERROR':\n      return { ...value,\n        lists: [],\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return value;\n  }\n};\n\nconst fetchData = async source => {\n  try {\n    const data = await fetch(source);\n    const dataJSON = await data.json();\n\n    if (dataJSON) {\n      return await {\n        data: dataJSON,\n        error: false\n      };\n    }\n  } catch (error) {\n    return {\n      data: false,\n      error: error.message\n    };\n  }\n};\n\nconst ListContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [value, dispatch] = useReducer(reducer, initialValue);\n\n  const getListsRequest = async () => {\n    const result = await fetchData('https://my-json-server.typicode.com/PacktPublishing/React-Projects/lists');\n\n    if (result.data && result.data.length) {\n      dispatch({\n        type: 'GET_LISTS_SUCCESS',\n        payload: result.data\n      });\n    } else {\n      dispatch({\n        type: 'GET_LISTS_ERROR',\n        payload: result.error\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ListContext.Provider, {\n    value: { ...value,\n      getListsRequest\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListContextProvider, \"ovnT1fEi4bmnxA6YH1MPqoB72go=\");\n\n_c = ListContextProvider;\nexport default ListContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListContextProvider\");","map":{"version":3,"sources":["/home/even/Documents/my_scripts/salt/misc_tutorials/personal_shopping_list/src/Context/ListContextProvider.js"],"names":["React","useReducer","ListContext","createContext","initialValue","lists","loading","error","reducer","value","action","console","log","type","payload","fetchData","source","data","fetch","dataJSON","json","message","ListContextProvider","children","dispatch","getListsRequest","result","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,EAApB;AAEP,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,UAAQC,MAAM,CAACG,IAAf;AACE,SAAK,mBAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELJ,QAAAA,KAAK,EAAEK,MAAM,CAACI,OAFT;AAGLR,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAK,iBAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELJ,QAAAA,KAAK,EAAE,EAFF;AAGLC,QAAAA,OAAO,EAAE,KAHJ;AAILC,QAAAA,KAAK,EAAEG,MAAM,CAACI;AAJT,OAAP;;AAMF;AACE,aAAOL,KAAP;AAfJ;AAiBD,CAnBD;;AAqBA,MAAMM,SAAS,GAAG,MAAOC,MAAP,IAAkB;AAClC,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAACF,MAAD,CAAxB;AACA,UAAMG,QAAQ,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAvB;;AAEA,QAAID,QAAJ,EAAc;AACZ,aAAO,MAAO;AAAEF,QAAAA,IAAI,EAAEE,QAAR;AAAkBZ,QAAAA,KAAK,EAAE;AAAzB,OAAd;AACD;AACF,GAPD,CAOE,OAAOA,KAAP,EAAc;AACd,WAAQ;AAAEU,MAAAA,IAAI,EAAE,KAAR;AAAeV,MAAAA,KAAK,EAAEA,KAAK,CAACc;AAA5B,KAAR;AACD;AACF,CAXD;;AAaA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C,QAAM,CAACd,KAAD,EAAQe,QAAR,IAAoBvB,UAAU,CAACO,OAAD,EAAUJ,YAAV,CAApC;;AAEA,QAAMqB,eAAe,GAAG,YAAY;AAClC,UAAMC,MAAM,GAAG,MAAMX,SAAS,CAAC,0EAAD,CAA9B;;AAEA,QAAIW,MAAM,CAACT,IAAP,IAAeS,MAAM,CAACT,IAAP,CAAYU,MAA/B,EAAuC;AACrCH,MAAAA,QAAQ,CAAC;AAAEX,QAAAA,IAAI,EAAE,mBAAR;AAA6BC,QAAAA,OAAO,EAAEY,MAAM,CAACT;AAA7C,OAAD,CAAR;AACD,KAFD,MAEO;AACLO,MAAAA,QAAQ,CAAC;AAAEX,QAAAA,IAAI,EAAE,iBAAR;AAA2BC,QAAAA,OAAO,EAAEY,MAAM,CAACnB;AAA3C,OAAD,CAAR;AACD;AACF,GARD;;AAUA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE,EAAE,GAAGE,KAAL;AAAYgB,MAAAA;AAAZ,KAA7B;AAAA,cACGF;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAlBD;;GAAMD,mB;;KAAAA,mB;AAoBN,eAAeA,mBAAf","sourcesContent":["import React, { useReducer } from 'react';\n\nexport const ListContext = React.createContext();\n\nconst initialValue = {\n  lists: [],\n  loading: true,\n  error: '',\n};\n\nconst reducer = (value, action) => {\n  console.log(value);\n  switch (action.type) {\n    case 'GET_LISTS_SUCCESS':\n      return {\n        ...value,\n        lists: action.payload,\n        loading: false,\n      };\n    case 'GET_LISTS_ERROR':\n      return {\n        ...value,\n        lists: [],\n        loading: false,\n        error: action.payload,\n      };\n    default:\n      return value;\n  }\n};\n\nconst fetchData = async (source) => {\n  try {\n    const data = await fetch(source);\n    const dataJSON = await data.json();\n\n    if (dataJSON) {\n      return await ({ data: dataJSON, error: false });\n    }\n  } catch (error) {\n    return ({ data: false, error: error.message });\n  }\n};\n\nconst ListContextProvider = ({ children }) => {\n  const [value, dispatch] = useReducer(reducer, initialValue);\n\n  const getListsRequest = async () => {\n    const result = await fetchData('https://my-json-server.typicode.com/PacktPublishing/React-Projects/lists');\n\n    if (result.data && result.data.length) {\n      dispatch({ type: 'GET_LISTS_SUCCESS', payload: result.data });\n    } else {\n      dispatch({ type: 'GET_LISTS_ERROR', payload: result.error });\n    }\n  }\n\n  return (\n    <ListContext.Provider value={{ ...value, getListsRequest }}>\n      {children}\n    </ListContext.Provider>\n  );\n};\n\nexport default ListContextProvider;\n"]},"metadata":{},"sourceType":"module"}