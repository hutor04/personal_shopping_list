{"ast":null,"code":"var _jsxFileName = \"/home/even/Documents/my_scripts/salt/misc_tutorials/personal_shopping_list/src/withDataFetching.js\";\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst withDataFetching = WrappedComponent => {\n  var _s = $RefreshSig$();\n\n  return _s(({\n    dataSource,\n    ...rest\n  }) => {\n    _s();\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState('');\n    useEffect(() => {\n      const fetchData = async source => {\n        try {\n          const data = await fetch(dataSource);\n          const dataJSON = await data.json();\n\n          if (dataJSON) {\n            setData(dataJSON);\n            setLoading(false);\n          }\n        } catch (error) {\n          setLoading(false);\n          setError(error.message);\n        }\n      };\n\n      return fetchData(dataSource);\n    }, [dataSource]);\n    return /*#__PURE__*/_jsxDEV(WrappedComponent, {\n      data: data,\n      loading: loading,\n      error: error,\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this);\n  }, \"zQ8LiRPYv2/19tdDZKOcN7bj4iA=\");\n};\n\nexport default withDataFetching;","map":{"version":3,"sources":["/home/even/Documents/my_scripts/salt/misc_tutorials/personal_shopping_list/src/withDataFetching.js"],"names":["React","useState","useEffect","withDataFetching","WrappedComponent","dataSource","rest","data","setData","loading","setLoading","error","setError","fetchData","source","fetch","dataJSON","json","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,gBAAgB,GAAIC,gBAAD;AAAA;;AAAA,YAAsB,CAAC;AAACC,IAAAA,UAAD;AAAa,OAAGC;AAAhB,GAAD,KAA2B;AAAA;;AACxE,UAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,UAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,UAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AAEAC,IAAAA,SAAS,CAAC,MAAM;AACd,YAAMW,SAAS,GAAG,MAAOC,MAAP,IAAkB;AAClC,YAAI;AACF,gBAAMP,IAAI,GAAG,MAAMQ,KAAK,CAACV,UAAD,CAAxB;AACA,gBAAMW,QAAQ,GAAG,MAAMT,IAAI,CAACU,IAAL,EAAvB;;AAEA,cAAID,QAAJ,EAAc;AACZR,YAAAA,OAAO,CAACQ,QAAD,CAAP;AACAN,YAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,SARD,CAQE,OAAOC,KAAP,EAAc;AACdD,UAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,UAAAA,QAAQ,CAACD,KAAK,CAACO,OAAP,CAAR;AACD;AACF,OAbD;;AAcA,aAAOL,SAAS,CAACR,UAAD,CAAhB;AACD,KAhBQ,EAgBN,CAACA,UAAD,CAhBM,CAAT;AAkBA,wBACE,QAAC,gBAAD;AACE,MAAA,IAAI,EAAEE,IADR;AAEE,MAAA,OAAO,EAAEE,OAFX;AAGE,MAAA,KAAK,EAAEE,KAHT;AAAA,SAIML;AAJN;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GA/BwB;AAAA,CAAzB;;AAiCA,eAAeH,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst withDataFetching = (WrappedComponent) => ({dataSource, ...rest}) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchData = async (source) => {\n      try {\n        const data = await fetch(dataSource);\n        const dataJSON = await data.json();\n\n        if (dataJSON) {\n          setData(dataJSON);\n          setLoading(false);\n        }\n      } catch (error) {\n        setLoading(false);\n        setError(error.message);\n      }\n    };\n    return fetchData(dataSource);\n  }, [dataSource]);\n\n  return (\n    <WrappedComponent\n      data={data}\n      loading={loading}\n      error={error}\n      {...rest}\n    />\n  );\n};\n\nexport default withDataFetching;\n\n"]},"metadata":{},"sourceType":"module"}