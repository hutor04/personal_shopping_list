{"ast":null,"code":"var _jsxFileName = \"/home/even/Documents/my_scripts/salt/misc_tutorials/personal_shopping_list/src/Context/ListContextProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ListContext = /*#__PURE__*/React.createContext();\nconst initialValue = {\n  lists: [],\n  loading: true,\n  error: ''\n};\n\nconst fetchData = async source => {\n  try {\n    const data = await fetch(source);\n    const dataJSON = await data.json();\n\n    if (dataJSON) {\n      return await {\n        data: dataJSON,\n        error: false\n      };\n    }\n  } catch (error) {\n    return {\n      data: false,\n      error: error.message\n    };\n  }\n};\n\nconst ListContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [lists, setLists] = useState([]);\n  useEffect(() => {\n    const asyncFetchData = async dataSource => {\n      const result = await fetchData(dataSource);\n      setLists([...result.data]);\n    };\n\n    asyncFetchData('https://my-json-server.typicode.com/PacktPublishing/React-Projects/lists');\n  }, [fetchData, setLists]);\n  return /*#__PURE__*/_jsxDEV(ListContext.Provider, {\n    value: {\n      lists\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ListContextProvider, \"LrIaNofUeLvNeBc8bn5FotDYde0=\");\n\n_c = ListContextProvider;\nexport default ListContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListContextProvider\");","map":{"version":3,"sources":["/home/even/Documents/my_scripts/salt/misc_tutorials/personal_shopping_list/src/Context/ListContextProvider.js"],"names":["React","useState","useEffect","ListContext","createContext","initialValue","lists","loading","error","fetchData","source","data","fetch","dataJSON","json","message","ListContextProvider","children","setLists","asyncFetchData","dataSource","result"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,OAAO,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,EAApB;AAEP,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;;AAMA,MAAMC,SAAS,GAAG,MAAOC,MAAP,IAAkB;AAClC,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMC,KAAK,CAACF,MAAD,CAAxB;AACA,UAAMG,QAAQ,GAAG,MAAMF,IAAI,CAACG,IAAL,EAAvB;;AAEA,QAAID,QAAJ,EAAc;AACZ,aAAO,MAAO;AAAEF,QAAAA,IAAI,EAAEE,QAAR;AAAkBL,QAAAA,KAAK,EAAE;AAAzB,OAAd;AACD;AACF,GAPD,CAOE,OAAOA,KAAP,EAAc;AACd,WAAQ;AAAEG,MAAAA,IAAI,EAAE,KAAR;AAAeH,MAAAA,KAAK,EAAEA,KAAK,CAACO;AAA5B,KAAR;AACD;AACF,CAXD;;AAaA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC5C,QAAM,CAACX,KAAD,EAAQY,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,cAAc,GAAG,MAAOC,UAAP,IAAsB;AAC3C,YAAMC,MAAM,GAAG,MAAMZ,SAAS,CAACW,UAAD,CAA9B;AACAF,MAAAA,QAAQ,CAAC,CAAC,GAAGG,MAAM,CAACV,IAAX,CAAD,CAAR;AACD,KAHD;;AAIAQ,IAAAA,cAAc,CAAC,0EAAD,CAAd;AACD,GANQ,EAMN,CAACV,SAAD,EAAYS,QAAZ,CANM,CAAT;AAQA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEZ,MAAAA;AAAF,KAA7B;AAAA,cACGW;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhBD;;GAAMD,mB;;KAAAA,mB;AAkBN,eAAeA,mBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport const ListContext = React.createContext();\n\nconst initialValue = {\n  lists: [],\n  loading: true,\n  error: '',\n};\n\nconst fetchData = async (source) => {\n  try {\n    const data = await fetch(source);\n    const dataJSON = await data.json();\n\n    if (dataJSON) {\n      return await ({ data: dataJSON, error: false });\n    }\n  } catch (error) {\n    return ({ data: false, error: error.message });\n  }\n};\n\nconst ListContextProvider = ({ children }) => {\n  const [lists, setLists] = useState([]);\n\n  useEffect(() => {\n    const asyncFetchData = async (dataSource) => {\n      const result = await fetchData(dataSource);\n      setLists([...result.data]);\n    };\n    asyncFetchData('https://my-json-server.typicode.com/PacktPublishing/React-Projects/lists');\n  }, [fetchData, setLists]);\n\n  return (\n    <ListContext.Provider value={{ lists }}>\n      {children}\n    </ListContext.Provider>\n  );\n};\n\nexport default ListContextProvider;\n"]},"metadata":{},"sourceType":"module"}